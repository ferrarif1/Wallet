{"ast":null,"code":"var _jsxFileName = \"/Users/zhangyuanyi/Downloads/Wallet/rn-eth-demo/src/Metamask.js\";\nimport React, { Component } from 'react';\nimport ERC20_ABI from \"./DAI_ABI.json\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Metamask extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  async connectToMetamask() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const accounts = await provider.send(\"eth_requestAccounts\", []);\n    const balance = await provider.getBalance(accounts[0]);\n    const balanceInEther = ethers.utils.formatEther(balance);\n    const block = await provider.getBlockNumber();\n    provider.on(\"block\", block => {\n      this.setState({\n        block\n      });\n    });\n    const daiContract = new ethers.Contract('0x6b175474e89094c44da98b954eedeac495271d0f', ERC20_ABI, provider);\n    const tokenName = await daiContract.name();\n    const tokenBalance = await daiContract.balanceOf(accounts[0]);\n    const tokenUnits = await daiContract.decimals();\n    const tokenBalanceInEther = ethers.utils.formatUnits(tokenBalance, tokenUnits);\n    this.setState({\n      selectedAddress: accounts[0],\n      balance: balanceInEther,\n      block,\n      tokenName,\n      tokenBalanceInEther\n    });\n  }\n  renderMetamask() {\n    if (!this.state.selectedAddress) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.connectToMetamask(),\n        children: \"Connect to Metamask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Welcome \", this.state.selectedAddress]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your ETH Balance is: \", this.state.balance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Current ETH Block is: \", this.state.block]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Balance of \", this.state.tokenName, \" is: \", this.state.tokenBalanceInEther]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this);\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderMetamask()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Metamask;","map":{"version":3,"names":["React","Component","ERC20_ABI","ethers","Metamask","constructor","props","state","connectToMetamask","provider","providers","Web3Provider","window","ethereum","accounts","send","balance","getBalance","balanceInEther","utils","formatEther","block","getBlockNumber","on","setState","daiContract","Contract","tokenName","name","tokenBalance","balanceOf","tokenUnits","decimals","tokenBalanceInEther","formatUnits","selectedAddress","renderMetamask","render"],"sources":["/Users/zhangyuanyi/Downloads/Wallet/rn-eth-demo/src/Metamask.js"],"sourcesContent":["import React, { Component } from 'react';\n\nimport ERC20_ABI from \"./DAI_ABI.json\";\n\nimport { ethers } from \"ethers\";\n\nclass Metamask extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  async connectToMetamask() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    const accounts = await provider.send(\"eth_requestAccounts\", []);\n    const balance = await provider.getBalance(accounts[0]);\n    const balanceInEther = ethers.utils.formatEther(balance);\n    const block = await provider.getBlockNumber();\n\n    provider.on(\"block\", (block) => {\n      this.setState({ block })\n    })\n\n    const daiContract = new ethers.Contract('0x6b175474e89094c44da98b954eedeac495271d0f', ERC20_ABI, provider);\n    const tokenName = await daiContract.name();\n    const tokenBalance = await daiContract.balanceOf(accounts[0]);\n    const tokenUnits = await daiContract.decimals();\n    const tokenBalanceInEther = ethers.utils.formatUnits(tokenBalance, tokenUnits);\n\n    this.setState({ selectedAddress: accounts[0], balance: balanceInEther, block, tokenName, tokenBalanceInEther })\n  }\n\n  renderMetamask() {\n    if (!this.state.selectedAddress) {\n      return (\n        <button onClick={() => this.connectToMetamask()}>Connect to Metamask</button>\n      )\n    } else {\n      return (\n        <div>\n          <p>Welcome {this.state.selectedAddress}</p>\n          <p>Your ETH Balance is: {this.state.balance}</p>\n          <p>Current ETH Block is: {this.state.block}</p>\n          <p>Balance of {this.state.tokenName} is: {this.state.tokenBalanceInEther}</p>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return(\n      <div>\n        {this.renderMetamask()}\n      </div>\n    )\n  }\n}\n\nexport default Metamask;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,OAAOC,SAAS,MAAM,gBAAgB;AAEtC,SAASC,MAAM,QAAQ,QAAQ;AAAC;AAEhC,MAAMC,QAAQ,SAASH,SAAS,CAAC;EAC/BI,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG,CACb,CAAC;EACH;EAEA,MAAMC,iBAAiB,GAAG;IACxB,MAAMC,QAAQ,GAAG,IAAIN,MAAM,CAACO,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,CAAC;IACnE,MAAMC,QAAQ,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;IAC/D,MAAMC,OAAO,GAAG,MAAMP,QAAQ,CAACQ,UAAU,CAACH,QAAQ,CAAC,CAAC,CAAC,CAAC;IACtD,MAAMI,cAAc,GAAGf,MAAM,CAACgB,KAAK,CAACC,WAAW,CAACJ,OAAO,CAAC;IACxD,MAAMK,KAAK,GAAG,MAAMZ,QAAQ,CAACa,cAAc,EAAE;IAE7Cb,QAAQ,CAACc,EAAE,CAAC,OAAO,EAAGF,KAAK,IAAK;MAC9B,IAAI,CAACG,QAAQ,CAAC;QAAEH;MAAM,CAAC,CAAC;IAC1B,CAAC,CAAC;IAEF,MAAMI,WAAW,GAAG,IAAItB,MAAM,CAACuB,QAAQ,CAAC,4CAA4C,EAAExB,SAAS,EAAEO,QAAQ,CAAC;IAC1G,MAAMkB,SAAS,GAAG,MAAMF,WAAW,CAACG,IAAI,EAAE;IAC1C,MAAMC,YAAY,GAAG,MAAMJ,WAAW,CAACK,SAAS,CAAChB,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC7D,MAAMiB,UAAU,GAAG,MAAMN,WAAW,CAACO,QAAQ,EAAE;IAC/C,MAAMC,mBAAmB,GAAG9B,MAAM,CAACgB,KAAK,CAACe,WAAW,CAACL,YAAY,EAAEE,UAAU,CAAC;IAE9E,IAAI,CAACP,QAAQ,CAAC;MAAEW,eAAe,EAAErB,QAAQ,CAAC,CAAC,CAAC;MAAEE,OAAO,EAAEE,cAAc;MAAEG,KAAK;MAAEM,SAAS;MAAEM;IAAoB,CAAC,CAAC;EACjH;EAEAG,cAAc,GAAG;IACf,IAAI,CAAC,IAAI,CAAC7B,KAAK,CAAC4B,eAAe,EAAE;MAC/B,oBACE;QAAQ,OAAO,EAAE,MAAM,IAAI,CAAC3B,iBAAiB,EAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA6B;IAEjF,CAAC,MAAM;MACL,oBACE;QAAA,wBACE;UAAA,uBAAY,IAAI,CAACD,KAAK,CAAC4B,eAAe;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK,eAC3C;UAAA,oCAAyB,IAAI,CAAC5B,KAAK,CAACS,OAAO;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK,eAChD;UAAA,qCAA0B,IAAI,CAACT,KAAK,CAACc,KAAK;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK,eAC/C;UAAA,0BAAe,IAAI,CAACd,KAAK,CAACoB,SAAS,WAAO,IAAI,CAACpB,KAAK,CAAC0B,mBAAmB;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QACzE;IAEV;EACF;EAEAI,MAAM,GAAG;IACP,oBACE;MAAA,UACG,IAAI,CAACD,cAAc;IAAE;MAAA;MAAA;MAAA;IAAA,QAClB;EAEV;AACF;AAEA,eAAehC,QAAQ"},"metadata":{},"sourceType":"module"}