{"ast":null,"code":"var _jsxFileName = \"/Users/zhangyuanyi/Downloads/Wallet/rn-eth-demo/src/Metamask.js\";\nimport React, { Component } from 'react';\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Metamask extends Component {\n  constructor(props) {\n    super(props);\n  }\n  async connectToMetamask() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const accounts = await provider.send(\"eth_requestAccounts\", []);\n    this.setState({\n      selectedAddress: accounts[0]\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","ethers","Metamask","constructor","props","connectToMetamask","provider","providers","Web3Provider","window","ethereum","accounts","send","setState","selectedAddress","render"],"sources":["/Users/zhangyuanyi/Downloads/Wallet/rn-eth-demo/src/Metamask.js"],"sourcesContent":["import React, { Component } from 'react';\n\nimport { ethers } from \"ethers\";\n\nclass Metamask extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  async connectToMetamask() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    const accounts = await provider.send(\"eth_requestAccounts\", []);\n    this.setState({ selectedAddress: accounts[0] })\n  }\n\n  render() {\n    return(\n      <div>\n      </div>\n    )\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,SAASC,MAAM,QAAQ,QAAQ;AAAC;AAEhC,MAAMC,QAAQ,SAASF,SAAS,CAAC;EAC/BG,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;EACd;EAEA,MAAMC,iBAAiB,GAAG;IACxB,MAAMC,QAAQ,GAAG,IAAIL,MAAM,CAACM,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,CAAC;IACnE,MAAMC,QAAQ,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;IAC/D,IAAI,CAACC,QAAQ,CAAC;MAAEC,eAAe,EAAEH,QAAQ,CAAC,CAAC;IAAE,CAAC,CAAC;EACjD;EAEAI,MAAM,GAAG;IACP,oBACE;MAAA;MAAA;MAAA;IAAA,QACM;EAEV;AACF"},"metadata":{},"sourceType":"module"}