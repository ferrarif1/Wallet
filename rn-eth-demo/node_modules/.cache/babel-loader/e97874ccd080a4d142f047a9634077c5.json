{"ast":null,"code":"var _jsxFileName = \"/Users/zhangyuanyi/Downloads/Wallet/rn-eth-demo/src/Metamask.js\";\nimport React, { Component } from 'react';\nimport DAI_ABI from \"./DAI_ABI.json\";\nimport CNFT_ABI from \"./CNFT_ABI.json\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Metamask extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  async connectToMetamask() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const accounts = await provider.send(\"eth_requestAccounts\", []);\n    const balance = await provider.getBalance(accounts[0]);\n    const balanceInEther = ethers.utils.formatEther(balance);\n    const block = await provider.getBlockNumber();\n    provider.on(\"block\", block => {\n      this.setState({\n        block\n      });\n    });\n    const daiContract = new ethers.Contract('0x6b175474e89094c44da98b954eedeac495271d0f', DAI_ABI, provider);\n    const tokenName = await daiContract.name();\n    const tokenBalance = await daiContract.balanceOf(accounts[0]);\n    const tokenUnits = await daiContract.decimals();\n    const tokenBalanceInEther = ethers.utils.formatUnits(tokenBalance, tokenUnits);\n    this.setState({\n      selectedAddress: accounts[0],\n      balance: balanceInEther,\n      block,\n      tokenName,\n      tokenBalanceInEther\n    });\n  }\n  async sendDaiTo(to, amountInEther) {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const daiContract = new ethers.Contract('0x6b175474e89094c44da98b954eedeac495271d0f', DAI_ABI, provider);\n    const tokenUnits = await daiContract.decimals();\n    const tokenAmountInEther = ethers.utils.parseUnits(amountInEther, tokenUnits);\n    const daiContractWithSigner = daiContract.connect(signer);\n    daiContractWithSigner.transfer(\"0x708Ef16bF16Bb9f14CfE36075E9ae17bCd1C5B40\", tokenAmountInEther);\n  }\n\n  //https://goerli.etherscan.io/address/0xb1e52d0b4f65fa7034748fb6ae2a6472e942b135#code\n  async mintNFT(tokenURL) {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const nftContract = new ethers.Contract('0xb1e52d0b4f65fa7034748fb6ae2a6472e942b135', CNFT_ABI, provider);\n    const nftContractWithSigner = nftContract.connect(signer);\n    nftContractWithSigner.safeMint(tokenURL);\n  }\n  renderMetamask() {\n    if (!this.state.selectedAddress) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.connectToMetamask(),\n        children: \"Connect to Metamask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Welcome \", this.state.selectedAddress]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your ETH Balance is: \", this.state.balance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Current ETH Block is: \", this.state.block]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Balance of \", this.state.tokenName, \" is: \", this.state.tokenBalanceInEther]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.sendDaiTo(\"0x708Ef16bF16Bb9f14CfE36075E9ae17bCd1C5B40\", \"1\"),\n          children: \"Donate 1 DAI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.sendDaiTo(\"0x708Ef16bF16Bb9f14CfE36075E9ae17bCd1C5B40\", \"1\"),\n          children: \"Donate 1 DAI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this);\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderMetamask()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Metamask;","map":{"version":3,"names":["React","Component","DAI_ABI","CNFT_ABI","ethers","Metamask","constructor","props","state","connectToMetamask","provider","providers","Web3Provider","window","ethereum","accounts","send","balance","getBalance","balanceInEther","utils","formatEther","block","getBlockNumber","on","setState","daiContract","Contract","tokenName","name","tokenBalance","balanceOf","tokenUnits","decimals","tokenBalanceInEther","formatUnits","selectedAddress","sendDaiTo","to","amountInEther","signer","getSigner","tokenAmountInEther","parseUnits","daiContractWithSigner","connect","transfer","mintNFT","tokenURL","nftContract","nftContractWithSigner","safeMint","renderMetamask","render"],"sources":["/Users/zhangyuanyi/Downloads/Wallet/rn-eth-demo/src/Metamask.js"],"sourcesContent":["import React, { Component } from 'react';\n\nimport DAI_ABI from \"./DAI_ABI.json\";\nimport CNFT_ABI from \"./CNFT_ABI.json\";\n\nimport { ethers } from \"ethers\";\n\nclass Metamask extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  async connectToMetamask() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    const accounts = await provider.send(\"eth_requestAccounts\", []);\n    const balance = await provider.getBalance(accounts[0]);\n    const balanceInEther = ethers.utils.formatEther(balance);\n    const block = await provider.getBlockNumber();\n\n    provider.on(\"block\", (block) => {\n      this.setState({ block })\n    })\n\n    const daiContract = new ethers.Contract('0x6b175474e89094c44da98b954eedeac495271d0f', DAI_ABI, provider);\n    const tokenName = await daiContract.name();\n    const tokenBalance = await daiContract.balanceOf(accounts[0]);\n    const tokenUnits = await daiContract.decimals();\n    const tokenBalanceInEther = ethers.utils.formatUnits(tokenBalance, tokenUnits);\n \n    this.setState({ selectedAddress: accounts[0], balance: balanceInEther, block, tokenName, tokenBalanceInEther })\n  }\n\n  async sendDaiTo(to, amountInEther) {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner()\n\n    const daiContract = new ethers.Contract('0x6b175474e89094c44da98b954eedeac495271d0f', DAI_ABI, provider);\n\n    const tokenUnits = await daiContract.decimals();\n    const tokenAmountInEther = ethers.utils.parseUnits(amountInEther, tokenUnits);\n\n    const daiContractWithSigner = daiContract.connect(signer);\n    daiContractWithSigner.transfer(\"0x708Ef16bF16Bb9f14CfE36075E9ae17bCd1C5B40\", tokenAmountInEther);\n  }\n\n  //https://goerli.etherscan.io/address/0xb1e52d0b4f65fa7034748fb6ae2a6472e942b135#code\n  async mintNFT(tokenURL) {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner()\n\n    const nftContract = new ethers.Contract('0xb1e52d0b4f65fa7034748fb6ae2a6472e942b135', CNFT_ABI, provider);\n\n    const nftContractWithSigner = nftContract.connect(signer);\n    nftContractWithSigner.safeMint(tokenURL);\n  }\n\n\n\n  renderMetamask() {\n    if (!this.state.selectedAddress) {\n      return (\n        <button onClick={() => this.connectToMetamask()}>Connect to Metamask</button>\n      )\n    } else {\n      return (\n        <div>\n          <p>Welcome {this.state.selectedAddress}</p>\n          <p>Your ETH Balance is: {this.state.balance}</p>\n          <p>Current ETH Block is: {this.state.block}</p>\n          <p>Balance of {this.state.tokenName} is: {this.state.tokenBalanceInEther}</p>\n          <button onClick={() => this.sendDaiTo(\"0x708Ef16bF16Bb9f14CfE36075E9ae17bCd1C5B40\", \"1\")}>Donate 1 DAI</button>\n          <button onClick={() => this.sendDaiTo(\"0x708Ef16bF16Bb9f14CfE36075E9ae17bCd1C5B40\", \"1\")}>Donate 1 DAI</button>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return(\n      <div>\n        {this.renderMetamask()}\n      </div>\n    )\n  }\n}\n\n\nexport default Metamask;"],"mappings":"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"},"metadata":{},"sourceType":"module"}