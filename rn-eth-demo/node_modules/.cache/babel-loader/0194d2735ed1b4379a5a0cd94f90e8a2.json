{"ast":null,"code":"var _jsxFileName = \"/Users/zhangyuanyi/Downloads/Wallet/rn-eth-demo/src/Metamask.js\";\nimport React, { Component } from 'react';\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Metamask extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  async connectToMetamask() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const accounts = await provider.send(\"eth_requestAccounts\", []);\n    this.setState({\n      selectedAddress: accounts[0]\n    });\n  }\n  renderMetamask() {\n    if (!this.state.selectedAddress) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.connectToMetamask(),\n        children: \"Connect to Metamask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Welcome \", this.state.selectedAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this);\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderMetamask()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Metamask;","map":{"version":3,"names":["React","Component","ethers","Metamask","constructor","props","state","connectToMetamask","provider","providers","Web3Provider","window","ethereum","accounts","send","setState","selectedAddress","renderMetamask","render"],"sources":["/Users/zhangyuanyi/Downloads/Wallet/rn-eth-demo/src/Metamask.js"],"sourcesContent":["import React, { Component } from 'react';\n\nimport { ethers } from \"ethers\";\n\nclass Metamask extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  async connectToMetamask() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    const accounts = await provider.send(\"eth_requestAccounts\", []);\n    this.setState({ selectedAddress: accounts[0] })\n  }\n\n  renderMetamask() {\n    if (!this.state.selectedAddress) {\n      return (\n        <button onClick={() => this.connectToMetamask()}>Connect to Metamask</button>\n      )\n    } else {\n      return (\n        <p>Welcome {this.state.selectedAddress}</p>\n      );\n    }\n  }\n\n  render() {\n    return(\n      <div>\n        {this.renderMetamask()}\n      </div>\n    )\n  }\n}\n\nexport default Metamask;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,SAASC,MAAM,QAAQ,QAAQ;AAAC;AAEhC,MAAMC,QAAQ,SAASF,SAAS,CAAC;EAC/BG,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG,CACb,CAAC;EACH;EAEA,MAAMC,iBAAiB,GAAG;IACxB,MAAMC,QAAQ,GAAG,IAAIN,MAAM,CAACO,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,CAAC;IACnE,MAAMC,QAAQ,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;IAC/D,IAAI,CAACC,QAAQ,CAAC;MAAEC,eAAe,EAAEH,QAAQ,CAAC,CAAC;IAAE,CAAC,CAAC;EACjD;EAEAI,cAAc,GAAG;IACf,IAAI,CAAC,IAAI,CAACX,KAAK,CAACU,eAAe,EAAE;MAC/B,oBACE;QAAQ,OAAO,EAAE,MAAM,IAAI,CAACT,iBAAiB,EAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA6B;IAEjF,CAAC,MAAM;MACL,oBACE;QAAA,uBAAY,IAAI,CAACD,KAAK,CAACU,eAAe;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK;IAE/C;EACF;EAEAE,MAAM,GAAG;IACP,oBACE;MAAA,UACG,IAAI,CAACD,cAAc;IAAE;MAAA;MAAA;MAAA;IAAA,QAClB;EAEV;AACF;AAEA,eAAed,QAAQ"},"metadata":{},"sourceType":"module"}