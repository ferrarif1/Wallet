{"ast":null,"code":"/**\n * compress/decompress hex-strings to utf16 or base64\n * thx @juvian\n * @link https://stackoverflow.com/a/40471908/3443137\n */\nimport { removeLeading0x, addLeading0x } from './util';\nexport function compress(hex) {\n  var base64 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  hex = removeLeading0x(hex); // if base64:true, we use our own function because it results in a smaller output\n\n  if (base64 === true) return Buffer.from(hex, 'hex').toString('base64');\n  var string = '';\n  while (hex.length % 4 != 0) {\n    // we need it to be multiple of 4\n    hex = '0' + hex;\n  }\n  for (var i = 0; i < hex.length; i += 4) {\n    // get char from ascii code which goes from 0 to 65536\n    string += String.fromCharCode(parseInt(hex.substring(i, i + 4), 16));\n  }\n  return string;\n}\nexport function decompress(compressedString) {\n  var base64 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  // if base64:true, we use our own function because it results in a smaller output\n  if (base64 === true) {\n    var ret = Buffer.from(compressedString, 'base64').toString('hex');\n    return addLeading0x(ret);\n  }\n  var hex = '';\n  for (var i = 0; i < compressedString.length; i++) {\n    // get character ascii code and convert to hexa string, adding necessary 0s\n    hex += ((i == 0 ? '' : '000') + compressedString.charCodeAt(i).toString(16)).slice(-4);\n  }\n  hex = hex.toLowerCase();\n  return addLeading0x(hex);\n}","map":{"version":3,"names":["removeLeading0x","addLeading0x","compress","hex","base64","arguments","length","undefined","Buffer","from","toString","string","i","String","fromCharCode","parseInt","substring","decompress","compressedString","ret","charCodeAt","slice","toLowerCase"],"sources":["/Users/zhangyuanyi/Downloads/Wallet/walletdemo/node_modules/eth-crypto/dist/es/hex.js"],"sourcesContent":["/**\n * compress/decompress hex-strings to utf16 or base64\n * thx @juvian\n * @link https://stackoverflow.com/a/40471908/3443137\n */\nimport { removeLeading0x, addLeading0x } from './util';\nexport function compress(hex) {\n  var base64 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  hex = removeLeading0x(hex); // if base64:true, we use our own function because it results in a smaller output\n\n  if (base64 === true) return Buffer.from(hex, 'hex').toString('base64');\n  var string = '';\n\n  while (hex.length % 4 != 0) {\n    // we need it to be multiple of 4\n    hex = '0' + hex;\n  }\n\n  for (var i = 0; i < hex.length; i += 4) {\n    // get char from ascii code which goes from 0 to 65536\n    string += String.fromCharCode(parseInt(hex.substring(i, i + 4), 16));\n  }\n\n  return string;\n}\nexport function decompress(compressedString) {\n  var base64 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  // if base64:true, we use our own function because it results in a smaller output\n  if (base64 === true) {\n    var ret = Buffer.from(compressedString, 'base64').toString('hex');\n    return addLeading0x(ret);\n  }\n\n  var hex = '';\n\n  for (var i = 0; i < compressedString.length; i++) {\n    // get character ascii code and convert to hexa string, adding necessary 0s\n    hex += ((i == 0 ? '' : '000') + compressedString.charCodeAt(i).toString(16)).slice(-4);\n  }\n\n  hex = hex.toLowerCase();\n  return addLeading0x(hex);\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,eAAe,EAAEC,YAAY,QAAQ,QAAQ;AACtD,OAAO,SAASC,QAAQ,CAACC,GAAG,EAAE;EAC5B,IAAIC,MAAM,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,KAAK;EACtFF,GAAG,GAAGH,eAAe,CAACG,GAAG,CAAC,CAAC,CAAC;;EAE5B,IAAIC,MAAM,KAAK,IAAI,EAAE,OAAOI,MAAM,CAACC,IAAI,CAACN,GAAG,EAAE,KAAK,CAAC,CAACO,QAAQ,CAAC,QAAQ,CAAC;EACtE,IAAIC,MAAM,GAAG,EAAE;EAEf,OAAOR,GAAG,CAACG,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE;IAC1B;IACAH,GAAG,GAAG,GAAG,GAAGA,GAAG;EACjB;EAEA,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,GAAG,CAACG,MAAM,EAAEM,CAAC,IAAI,CAAC,EAAE;IACtC;IACAD,MAAM,IAAIE,MAAM,CAACC,YAAY,CAACC,QAAQ,CAACZ,GAAG,CAACa,SAAS,CAACJ,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;EACtE;EAEA,OAAOD,MAAM;AACf;AACA,OAAO,SAASM,UAAU,CAACC,gBAAgB,EAAE;EAC3C,IAAId,MAAM,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,KAAK;;EAEtF;EACA,IAAID,MAAM,KAAK,IAAI,EAAE;IACnB,IAAIe,GAAG,GAAGX,MAAM,CAACC,IAAI,CAACS,gBAAgB,EAAE,QAAQ,CAAC,CAACR,QAAQ,CAAC,KAAK,CAAC;IACjE,OAAOT,YAAY,CAACkB,GAAG,CAAC;EAC1B;EAEA,IAAIhB,GAAG,GAAG,EAAE;EAEZ,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGM,gBAAgB,CAACZ,MAAM,EAAEM,CAAC,EAAE,EAAE;IAChD;IACAT,GAAG,IAAI,CAAC,CAACS,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,KAAK,IAAIM,gBAAgB,CAACE,UAAU,CAACR,CAAC,CAAC,CAACF,QAAQ,CAAC,EAAE,CAAC,EAAEW,KAAK,CAAC,CAAC,CAAC,CAAC;EACxF;EAEAlB,GAAG,GAAGA,GAAG,CAACmB,WAAW,EAAE;EACvB,OAAOrB,YAAY,CAACE,GAAG,CAAC;AAC1B"},"metadata":{},"sourceType":"module"}