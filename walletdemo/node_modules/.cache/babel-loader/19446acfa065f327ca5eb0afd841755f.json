{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { ContractFactory } from 'ethers';\nexport default function txDataByCompiled(abi, bytecode, args) {\n  // solc returns a string which is often passed instead of the json\n  if (typeof abi === 'string') abi = JSON.parse(abi); // Construct a Contract Factory\n\n  var factory = new ContractFactory(abi, '0x' + bytecode);\n  var deployTransaction = factory.getDeployTransaction.apply(factory, _toConsumableArray(args));\n  return deployTransaction.data;\n}","map":{"version":3,"names":["_toConsumableArray","ContractFactory","txDataByCompiled","abi","bytecode","args","JSON","parse","factory","deployTransaction","getDeployTransaction","apply","data"],"sources":["/Users/zhangyuanyi/Downloads/Wallet/walletdemo/node_modules/eth-crypto/dist/es/tx-data-by-compiled.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { ContractFactory } from 'ethers';\nexport default function txDataByCompiled(abi, bytecode, args) {\n  // solc returns a string which is often passed instead of the json\n  if (typeof abi === 'string') abi = JSON.parse(abi); // Construct a Contract Factory\n\n  var factory = new ContractFactory(abi, '0x' + bytecode);\n  var deployTransaction = factory.getDeployTransaction.apply(factory, _toConsumableArray(args));\n  return deployTransaction.data;\n}"],"mappings":"AAAA,OAAOA,kBAAkB,MAAM,0CAA0C;AACzE,SAASC,eAAe,QAAQ,QAAQ;AACxC,eAAe,SAASC,gBAAgB,CAACC,GAAG,EAAEC,QAAQ,EAAEC,IAAI,EAAE;EAC5D;EACA,IAAI,OAAOF,GAAG,KAAK,QAAQ,EAAEA,GAAG,GAAGG,IAAI,CAACC,KAAK,CAACJ,GAAG,CAAC,CAAC,CAAC;;EAEpD,IAAIK,OAAO,GAAG,IAAIP,eAAe,CAACE,GAAG,EAAE,IAAI,GAAGC,QAAQ,CAAC;EACvD,IAAIK,iBAAiB,GAAGD,OAAO,CAACE,oBAAoB,CAACC,KAAK,CAACH,OAAO,EAAER,kBAAkB,CAACK,IAAI,CAAC,CAAC;EAC7F,OAAOI,iBAAiB,CAACG,IAAI;AAC/B"},"metadata":{},"sourceType":"module"}