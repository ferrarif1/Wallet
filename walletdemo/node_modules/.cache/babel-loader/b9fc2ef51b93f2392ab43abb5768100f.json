{"ast":null,"code":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\nvar Buffer = require('safe-buffer').Buffer;\nvar ethUtil = require('ethereumjs-util');\nvar crypto = require('crypto');\nvar randomBytes = require('randombytes');\nvar scryptsy = require('scryptsy');\nvar uuidv4 = require('uuid/v4');\nvar bs58check = require('bs58check');\nfunction assert(val, msg) {\n  if (!val) {\n    throw new Error(msg || 'Assertion failed');\n  }\n}\nfunction runCipherBuffer(cipher, data) {\n  return Buffer.concat([cipher.update(data), cipher.final()]);\n}\nvar Wallet = function Wallet(priv, pub) {\n  if (priv && pub) {\n    throw new Error('Cannot supply both a private and a public key to the constructor');\n  }\n  if (priv && !ethUtil.isValidPrivate(priv)) {\n    throw new Error('Private key does not satisfy the curve requirements (ie. it is invalid)');\n  }\n  if (pub && !ethUtil.isValidPublic(pub)) {\n    throw new Error('Invalid public key');\n  }\n  this._privKey = priv;\n  this._pubKey = pub;\n};\nObject.defineProperty(Wallet.prototype, 'privKey', {\n  get: function get() {\n    assert(this._privKey, 'This is a public key only wallet');\n    return this._privKey;\n  }\n});\nObject.defineProperty(Wallet.prototype, 'pubKey', {\n  get: function get() {\n    if (!this._pubKey) {\n      this._pubKey = ethUtil.privateToPublic(this.privKey);\n    }\n    return this._pubKey;\n  }\n});\nWallet.generate = function (icapDirect) {\n  if (icapDirect) {\n    var max = new ethUtil.BN('088f924eeceeda7fe92e1f5b0fffffffffffffff', 16);\n    while (true) {\n      var privKey = randomBytes(32);\n      if (new ethUtil.BN(ethUtil.privateToAddress(privKey)).lte(max)) {\n        return new Wallet(privKey);\n      }\n    }\n  } else {\n    return new Wallet(randomBytes(32));\n  }\n};\nWallet.generateVanityAddress = function (pattern) {\n  if ((typeof pattern === 'undefined' ? 'undefined' : _typeof(pattern)) !== 'object') {\n    pattern = new RegExp(pattern);\n  }\n  while (true) {\n    var privKey = randomBytes(32);\n    var address = ethUtil.privateToAddress(privKey);\n    if (pattern.test(address.toString('hex'))) {\n      return new Wallet(privKey);\n    }\n  }\n};\nWallet.prototype.getPrivateKey = function () {\n  return this.privKey;\n};\nWallet.prototype.getPrivateKeyString = function () {\n  return ethUtil.bufferToHex(this.getPrivateKey());\n};\nWallet.prototype.getPublicKey = function () {\n  return this.pubKey;\n};\nWallet.prototype.getPublicKeyString = function () {\n  return ethUtil.bufferToHex(this.getPublicKey());\n};\nWallet.prototype.getAddress = function () {\n  return ethUtil.publicToAddress(this.pubKey);\n};\nWallet.prototype.getAddressString = function () {\n  return ethUtil.bufferToHex(this.getAddress());\n};\nWallet.prototype.getChecksumAddressString = function () {\n  return ethUtil.toChecksumAddress(this.getAddressString());\n};\n\n// https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\nWallet.prototype.toV3 = function (password, opts) {\n  assert(this._privKey, 'This is a public key only wallet');\n  opts = opts || {};\n  var salt = opts.salt || randomBytes(32);\n  var iv = opts.iv || randomBytes(16);\n  var derivedKey;\n  var kdf = opts.kdf || 'scrypt';\n  var kdfparams = {\n    dklen: opts.dklen || 32,\n    salt: salt.toString('hex')\n  };\n  if (kdf === 'pbkdf2') {\n    kdfparams.c = opts.c || 262144;\n    kdfparams.prf = 'hmac-sha256';\n    derivedKey = crypto.pbkdf2Sync(Buffer.from(password), salt, kdfparams.c, kdfparams.dklen, 'sha256');\n  } else if (kdf === 'scrypt') {\n    // FIXME: support progress reporting callback\n    kdfparams.n = opts.n || 262144;\n    kdfparams.r = opts.r || 8;\n    kdfparams.p = opts.p || 1;\n    derivedKey = scryptsy(Buffer.from(password), salt, kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n  } else {\n    throw new Error('Unsupported kdf');\n  }\n  var cipher = crypto.createCipheriv(opts.cipher || 'aes-128-ctr', derivedKey.slice(0, 16), iv);\n  if (!cipher) {\n    throw new Error('Unsupported cipher');\n  }\n  var ciphertext = runCipherBuffer(cipher, this.privKey);\n  var mac = ethUtil.keccak256(Buffer.concat([derivedKey.slice(16, 32), Buffer.from(ciphertext, 'hex')]));\n  return {\n    version: 3,\n    id: uuidv4({\n      random: opts.uuid || randomBytes(16)\n    }),\n    address: this.getAddress().toString('hex'),\n    crypto: {\n      ciphertext: ciphertext.toString('hex'),\n      cipherparams: {\n        iv: iv.toString('hex')\n      },\n      cipher: opts.cipher || 'aes-128-ctr',\n      kdf: kdf,\n      kdfparams: kdfparams,\n      mac: mac.toString('hex')\n    }\n  };\n};\nWallet.prototype.getV3Filename = function (timestamp) {\n  /*\n   * We want a timestamp like 2016-03-15T17-11-33.007598288Z. Date formatting\n   * is a pain in Javascript, everbody knows that. We could use moment.js,\n   * but decide to do it manually in order to save space.\n   *\n   * toJSON() returns a pretty close version, so let's use it. It is not UTC though,\n   * but does it really matter?\n   *\n   * Alternative manual way with padding and Date fields: http://stackoverflow.com/a/7244288/4964819\n   *\n   */\n  var ts = timestamp ? new Date(timestamp) : new Date();\n  return ['UTC--', ts.toJSON().replace(/:/g, '-'), '--', this.getAddress().toString('hex')].join('');\n};\nWallet.prototype.toV3String = function (password, opts) {\n  return JSON.stringify(this.toV3(password, opts));\n};\nWallet.fromPublicKey = function (pub, nonStrict) {\n  if (nonStrict) {\n    pub = ethUtil.importPublic(pub);\n  }\n  return new Wallet(null, pub);\n};\nWallet.fromExtendedPublicKey = function (pub) {\n  assert(pub.slice(0, 4) === 'xpub', 'Not an extended public key');\n  pub = bs58check.decode(pub).slice(45);\n  // Convert to an Ethereum public key\n  return Wallet.fromPublicKey(pub, true);\n};\nWallet.fromPrivateKey = function (priv) {\n  return new Wallet(priv);\n};\nWallet.fromExtendedPrivateKey = function (priv) {\n  assert(priv.slice(0, 4) === 'xprv', 'Not an extended private key');\n  var tmp = bs58check.decode(priv);\n  assert(tmp[45] === 0, 'Invalid extended private key');\n  return Wallet.fromPrivateKey(tmp.slice(46));\n};\n\n// https://github.com/ethereum/go-ethereum/wiki/Passphrase-protected-key-store-spec\nWallet.fromV1 = function (input, password) {\n  assert(typeof password === 'string');\n  var json = (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' ? input : JSON.parse(input);\n  if (json.Version !== '1') {\n    throw new Error('Not a V1 wallet');\n  }\n  if (json.Crypto.KeyHeader.Kdf !== 'scrypt') {\n    throw new Error('Unsupported key derivation scheme');\n  }\n  var kdfparams = json.Crypto.KeyHeader.KdfParams;\n  var derivedKey = scryptsy(Buffer.from(password), Buffer.from(json.Crypto.Salt, 'hex'), kdfparams.N, kdfparams.R, kdfparams.P, kdfparams.DkLen);\n  var ciphertext = Buffer.from(json.Crypto.CipherText, 'hex');\n  var mac = ethUtil.keccak256(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\n  if (mac.toString('hex') !== json.Crypto.MAC) {\n    throw new Error('Key derivation failed - possibly wrong passphrase');\n  }\n  var decipher = crypto.createDecipheriv('aes-128-cbc', ethUtil.keccak256(derivedKey.slice(0, 16)).slice(0, 16), Buffer.from(json.Crypto.IV, 'hex'));\n  var seed = runCipherBuffer(decipher, ciphertext);\n  return new Wallet(seed);\n};\nWallet.fromV3 = function (input, password, nonStrict) {\n  assert(typeof password === 'string');\n  var json = (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' ? input : JSON.parse(nonStrict ? input.toLowerCase() : input);\n  if (json.version !== 3) {\n    throw new Error('Not a V3 wallet');\n  }\n  var derivedKey;\n  var kdfparams;\n  if (json.crypto.kdf === 'scrypt') {\n    kdfparams = json.crypto.kdfparams;\n\n    // FIXME: support progress reporting callback\n    derivedKey = scryptsy(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n  } else if (json.crypto.kdf === 'pbkdf2') {\n    kdfparams = json.crypto.kdfparams;\n    if (kdfparams.prf !== 'hmac-sha256') {\n      throw new Error('Unsupported parameters to PBKDF2');\n    }\n    derivedKey = crypto.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n  } else {\n    throw new Error('Unsupported key derivation scheme');\n  }\n  var ciphertext = Buffer.from(json.crypto.ciphertext, 'hex');\n  var mac = ethUtil.keccak256(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\n  if (mac.toString('hex') !== json.crypto.mac) {\n    throw new Error('Key derivation failed - possibly wrong passphrase');\n  }\n  var decipher = crypto.createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 16), Buffer.from(json.crypto.cipherparams.iv, 'hex'));\n  var seed = runCipherBuffer(decipher, ciphertext);\n  return new Wallet(seed);\n};\n\n/*\n * Based on https://github.com/ethereum/pyethsaletool/blob/master/pyethsaletool.py\n * JSON fields: encseed, ethaddr, btcaddr, email\n */\nWallet.fromEthSale = function (input, password) {\n  assert(typeof password === 'string');\n  var json = (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' ? input : JSON.parse(input);\n  var encseed = Buffer.from(json.encseed, 'hex');\n\n  // key derivation\n  var derivedKey = crypto.pbkdf2Sync(password, password, 2000, 32, 'sha256').slice(0, 16);\n\n  // seed decoding (IV is first 16 bytes)\n  // NOTE: crypto (derived from openssl) when used with aes-*-cbc will handle PKCS#7 padding internally\n  //       see also http://stackoverflow.com/a/31614770/4964819\n  var decipher = crypto.createDecipheriv('aes-128-cbc', derivedKey, encseed.slice(0, 16));\n  var seed = runCipherBuffer(decipher, encseed.slice(16));\n  var wallet = new Wallet(ethUtil.keccak256(seed));\n  if (wallet.getAddress().toString('hex') !== json.ethaddr) {\n    throw new Error('Decoded key mismatch - possibly wrong passphrase');\n  }\n  return wallet;\n};\nmodule.exports = Wallet;","map":{"version":3,"names":["_typeof","Symbol","iterator","obj","constructor","prototype","Buffer","require","ethUtil","crypto","randomBytes","scryptsy","uuidv4","bs58check","assert","val","msg","Error","runCipherBuffer","cipher","data","concat","update","final","Wallet","priv","pub","isValidPrivate","isValidPublic","_privKey","_pubKey","Object","defineProperty","get","privateToPublic","privKey","generate","icapDirect","max","BN","privateToAddress","lte","generateVanityAddress","pattern","RegExp","address","test","toString","getPrivateKey","getPrivateKeyString","bufferToHex","getPublicKey","pubKey","getPublicKeyString","getAddress","publicToAddress","getAddressString","getChecksumAddressString","toChecksumAddress","toV3","password","opts","salt","iv","derivedKey","kdf","kdfparams","dklen","c","prf","pbkdf2Sync","from","n","r","p","createCipheriv","slice","ciphertext","mac","keccak256","version","id","random","uuid","cipherparams","getV3Filename","timestamp","ts","Date","toJSON","replace","join","toV3String","JSON","stringify","fromPublicKey","nonStrict","importPublic","fromExtendedPublicKey","decode","fromPrivateKey","fromExtendedPrivateKey","tmp","fromV1","input","json","parse","Version","Crypto","KeyHeader","Kdf","KdfParams","Salt","N","R","P","DkLen","CipherText","MAC","decipher","createDecipheriv","IV","seed","fromV3","toLowerCase","fromEthSale","encseed","wallet","ethaddr","module","exports"],"sources":["/Users/zhangyuanyi/Downloads/Wallet/walletdemo/node_modules/ethereumjs-wallet/index.js"],"sourcesContent":["'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar Buffer = require('safe-buffer').Buffer;\nvar ethUtil = require('ethereumjs-util');\nvar crypto = require('crypto');\nvar randomBytes = require('randombytes');\nvar scryptsy = require('scryptsy');\nvar uuidv4 = require('uuid/v4');\nvar bs58check = require('bs58check');\n\nfunction assert(val, msg) {\n  if (!val) {\n    throw new Error(msg || 'Assertion failed');\n  }\n}\n\nfunction runCipherBuffer(cipher, data) {\n  return Buffer.concat([cipher.update(data), cipher.final()]);\n}\n\nvar Wallet = function Wallet(priv, pub) {\n  if (priv && pub) {\n    throw new Error('Cannot supply both a private and a public key to the constructor');\n  }\n\n  if (priv && !ethUtil.isValidPrivate(priv)) {\n    throw new Error('Private key does not satisfy the curve requirements (ie. it is invalid)');\n  }\n\n  if (pub && !ethUtil.isValidPublic(pub)) {\n    throw new Error('Invalid public key');\n  }\n\n  this._privKey = priv;\n  this._pubKey = pub;\n};\n\nObject.defineProperty(Wallet.prototype, 'privKey', {\n  get: function get() {\n    assert(this._privKey, 'This is a public key only wallet');\n    return this._privKey;\n  }\n});\n\nObject.defineProperty(Wallet.prototype, 'pubKey', {\n  get: function get() {\n    if (!this._pubKey) {\n      this._pubKey = ethUtil.privateToPublic(this.privKey);\n    }\n    return this._pubKey;\n  }\n});\n\nWallet.generate = function (icapDirect) {\n  if (icapDirect) {\n    var max = new ethUtil.BN('088f924eeceeda7fe92e1f5b0fffffffffffffff', 16);\n    while (true) {\n      var privKey = randomBytes(32);\n      if (new ethUtil.BN(ethUtil.privateToAddress(privKey)).lte(max)) {\n        return new Wallet(privKey);\n      }\n    }\n  } else {\n    return new Wallet(randomBytes(32));\n  }\n};\n\nWallet.generateVanityAddress = function (pattern) {\n  if ((typeof pattern === 'undefined' ? 'undefined' : _typeof(pattern)) !== 'object') {\n    pattern = new RegExp(pattern);\n  }\n\n  while (true) {\n    var privKey = randomBytes(32);\n    var address = ethUtil.privateToAddress(privKey);\n\n    if (pattern.test(address.toString('hex'))) {\n      return new Wallet(privKey);\n    }\n  }\n};\n\nWallet.prototype.getPrivateKey = function () {\n  return this.privKey;\n};\n\nWallet.prototype.getPrivateKeyString = function () {\n  return ethUtil.bufferToHex(this.getPrivateKey());\n};\n\nWallet.prototype.getPublicKey = function () {\n  return this.pubKey;\n};\n\nWallet.prototype.getPublicKeyString = function () {\n  return ethUtil.bufferToHex(this.getPublicKey());\n};\n\nWallet.prototype.getAddress = function () {\n  return ethUtil.publicToAddress(this.pubKey);\n};\n\nWallet.prototype.getAddressString = function () {\n  return ethUtil.bufferToHex(this.getAddress());\n};\n\nWallet.prototype.getChecksumAddressString = function () {\n  return ethUtil.toChecksumAddress(this.getAddressString());\n};\n\n// https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\nWallet.prototype.toV3 = function (password, opts) {\n  assert(this._privKey, 'This is a public key only wallet');\n\n  opts = opts || {};\n  var salt = opts.salt || randomBytes(32);\n  var iv = opts.iv || randomBytes(16);\n\n  var derivedKey;\n  var kdf = opts.kdf || 'scrypt';\n  var kdfparams = {\n    dklen: opts.dklen || 32,\n    salt: salt.toString('hex')\n  };\n\n  if (kdf === 'pbkdf2') {\n    kdfparams.c = opts.c || 262144;\n    kdfparams.prf = 'hmac-sha256';\n    derivedKey = crypto.pbkdf2Sync(Buffer.from(password), salt, kdfparams.c, kdfparams.dklen, 'sha256');\n  } else if (kdf === 'scrypt') {\n    // FIXME: support progress reporting callback\n    kdfparams.n = opts.n || 262144;\n    kdfparams.r = opts.r || 8;\n    kdfparams.p = opts.p || 1;\n    derivedKey = scryptsy(Buffer.from(password), salt, kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n  } else {\n    throw new Error('Unsupported kdf');\n  }\n\n  var cipher = crypto.createCipheriv(opts.cipher || 'aes-128-ctr', derivedKey.slice(0, 16), iv);\n  if (!cipher) {\n    throw new Error('Unsupported cipher');\n  }\n\n  var ciphertext = runCipherBuffer(cipher, this.privKey);\n\n  var mac = ethUtil.keccak256(Buffer.concat([derivedKey.slice(16, 32), Buffer.from(ciphertext, 'hex')]));\n\n  return {\n    version: 3,\n    id: uuidv4({ random: opts.uuid || randomBytes(16) }),\n    address: this.getAddress().toString('hex'),\n    crypto: {\n      ciphertext: ciphertext.toString('hex'),\n      cipherparams: {\n        iv: iv.toString('hex')\n      },\n      cipher: opts.cipher || 'aes-128-ctr',\n      kdf: kdf,\n      kdfparams: kdfparams,\n      mac: mac.toString('hex')\n    }\n  };\n};\n\nWallet.prototype.getV3Filename = function (timestamp) {\n  /*\n   * We want a timestamp like 2016-03-15T17-11-33.007598288Z. Date formatting\n   * is a pain in Javascript, everbody knows that. We could use moment.js,\n   * but decide to do it manually in order to save space.\n   *\n   * toJSON() returns a pretty close version, so let's use it. It is not UTC though,\n   * but does it really matter?\n   *\n   * Alternative manual way with padding and Date fields: http://stackoverflow.com/a/7244288/4964819\n   *\n   */\n  var ts = timestamp ? new Date(timestamp) : new Date();\n\n  return ['UTC--', ts.toJSON().replace(/:/g, '-'), '--', this.getAddress().toString('hex')].join('');\n};\n\nWallet.prototype.toV3String = function (password, opts) {\n  return JSON.stringify(this.toV3(password, opts));\n};\n\nWallet.fromPublicKey = function (pub, nonStrict) {\n  if (nonStrict) {\n    pub = ethUtil.importPublic(pub);\n  }\n  return new Wallet(null, pub);\n};\n\nWallet.fromExtendedPublicKey = function (pub) {\n  assert(pub.slice(0, 4) === 'xpub', 'Not an extended public key');\n  pub = bs58check.decode(pub).slice(45);\n  // Convert to an Ethereum public key\n  return Wallet.fromPublicKey(pub, true);\n};\n\nWallet.fromPrivateKey = function (priv) {\n  return new Wallet(priv);\n};\n\nWallet.fromExtendedPrivateKey = function (priv) {\n  assert(priv.slice(0, 4) === 'xprv', 'Not an extended private key');\n  var tmp = bs58check.decode(priv);\n  assert(tmp[45] === 0, 'Invalid extended private key');\n  return Wallet.fromPrivateKey(tmp.slice(46));\n};\n\n// https://github.com/ethereum/go-ethereum/wiki/Passphrase-protected-key-store-spec\nWallet.fromV1 = function (input, password) {\n  assert(typeof password === 'string');\n  var json = (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' ? input : JSON.parse(input);\n\n  if (json.Version !== '1') {\n    throw new Error('Not a V1 wallet');\n  }\n\n  if (json.Crypto.KeyHeader.Kdf !== 'scrypt') {\n    throw new Error('Unsupported key derivation scheme');\n  }\n\n  var kdfparams = json.Crypto.KeyHeader.KdfParams;\n  var derivedKey = scryptsy(Buffer.from(password), Buffer.from(json.Crypto.Salt, 'hex'), kdfparams.N, kdfparams.R, kdfparams.P, kdfparams.DkLen);\n\n  var ciphertext = Buffer.from(json.Crypto.CipherText, 'hex');\n\n  var mac = ethUtil.keccak256(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\n\n  if (mac.toString('hex') !== json.Crypto.MAC) {\n    throw new Error('Key derivation failed - possibly wrong passphrase');\n  }\n\n  var decipher = crypto.createDecipheriv('aes-128-cbc', ethUtil.keccak256(derivedKey.slice(0, 16)).slice(0, 16), Buffer.from(json.Crypto.IV, 'hex'));\n  var seed = runCipherBuffer(decipher, ciphertext);\n\n  return new Wallet(seed);\n};\n\nWallet.fromV3 = function (input, password, nonStrict) {\n  assert(typeof password === 'string');\n  var json = (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' ? input : JSON.parse(nonStrict ? input.toLowerCase() : input);\n\n  if (json.version !== 3) {\n    throw new Error('Not a V3 wallet');\n  }\n\n  var derivedKey;\n  var kdfparams;\n  if (json.crypto.kdf === 'scrypt') {\n    kdfparams = json.crypto.kdfparams;\n\n    // FIXME: support progress reporting callback\n    derivedKey = scryptsy(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n  } else if (json.crypto.kdf === 'pbkdf2') {\n    kdfparams = json.crypto.kdfparams;\n\n    if (kdfparams.prf !== 'hmac-sha256') {\n      throw new Error('Unsupported parameters to PBKDF2');\n    }\n\n    derivedKey = crypto.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n  } else {\n    throw new Error('Unsupported key derivation scheme');\n  }\n\n  var ciphertext = Buffer.from(json.crypto.ciphertext, 'hex');\n\n  var mac = ethUtil.keccak256(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\n  if (mac.toString('hex') !== json.crypto.mac) {\n    throw new Error('Key derivation failed - possibly wrong passphrase');\n  }\n\n  var decipher = crypto.createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 16), Buffer.from(json.crypto.cipherparams.iv, 'hex'));\n  var seed = runCipherBuffer(decipher, ciphertext);\n\n  return new Wallet(seed);\n};\n\n/*\n * Based on https://github.com/ethereum/pyethsaletool/blob/master/pyethsaletool.py\n * JSON fields: encseed, ethaddr, btcaddr, email\n */\nWallet.fromEthSale = function (input, password) {\n  assert(typeof password === 'string');\n  var json = (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' ? input : JSON.parse(input);\n\n  var encseed = Buffer.from(json.encseed, 'hex');\n\n  // key derivation\n  var derivedKey = crypto.pbkdf2Sync(password, password, 2000, 32, 'sha256').slice(0, 16);\n\n  // seed decoding (IV is first 16 bytes)\n  // NOTE: crypto (derived from openssl) when used with aes-*-cbc will handle PKCS#7 padding internally\n  //       see also http://stackoverflow.com/a/31614770/4964819\n  var decipher = crypto.createDecipheriv('aes-128-cbc', derivedKey, encseed.slice(0, 16));\n  var seed = runCipherBuffer(decipher, encseed.slice(16));\n\n  var wallet = new Wallet(ethUtil.keccak256(seed));\n  if (wallet.getAddress().toString('hex') !== json.ethaddr) {\n    throw new Error('Decoded key mismatch - possibly wrong passphrase');\n  }\n  return wallet;\n};\n\nmodule.exports = Wallet;"],"mappings":"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"},"metadata":{},"sourceType":"script"}