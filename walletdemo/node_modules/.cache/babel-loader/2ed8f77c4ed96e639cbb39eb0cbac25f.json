{"ast":null,"code":"import createIdentity from './create-identity';\nimport * as publicKey from './public-key';\nimport decryptWithPrivateKey from './decrypt-with-private-key';\nimport encryptWithPublicKey from './encrypt-with-public-key';\nimport * as cipher from './cipher';\nimport publicKeyByPrivateKey from './public-key-by-private-key';\nimport recover from './recover';\nimport recoverPublicKey from './recover-public-key';\nimport sign from './sign';\nimport signTransaction from './sign-transaction';\nimport txDataByCompiled from './tx-data-by-compiled';\nimport calculateContractAddress from './calculate-contract-address';\nimport * as hash from './hash';\nimport * as hex from './hex';\nimport * as vrs from './vrs';\nimport * as util from './util';\nexport { createIdentity, publicKey, decryptWithPrivateKey, encryptWithPublicKey, cipher, publicKeyByPrivateKey, recover, recoverPublicKey, sign, signTransaction, txDataByCompiled, calculateContractAddress, hash, hex, vrs, util };\nexport default {\n  createIdentity: createIdentity,\n  publicKey: publicKey,\n  decryptWithPrivateKey: decryptWithPrivateKey,\n  encryptWithPublicKey: encryptWithPublicKey,\n  cipher: cipher,\n  publicKeyByPrivateKey: publicKeyByPrivateKey,\n  recover: recover,\n  recoverPublicKey: recoverPublicKey,\n  sign: sign,\n  signTransaction: signTransaction,\n  txDataByCompiled: txDataByCompiled,\n  calculateContractAddress: calculateContractAddress,\n  hash: hash,\n  hex: hex,\n  vrs: vrs,\n  util: util\n};","map":{"version":3,"names":["createIdentity","publicKey","decryptWithPrivateKey","encryptWithPublicKey","cipher","publicKeyByPrivateKey","recover","recoverPublicKey","sign","signTransaction","txDataByCompiled","calculateContractAddress","hash","hex","vrs","util"],"sources":["/Users/zhangyuanyi/Downloads/Wallet/walletdemo/node_modules/eth-crypto/dist/es/index.js"],"sourcesContent":["import createIdentity from './create-identity';\nimport * as publicKey from './public-key';\nimport decryptWithPrivateKey from './decrypt-with-private-key';\nimport encryptWithPublicKey from './encrypt-with-public-key';\nimport * as cipher from './cipher';\nimport publicKeyByPrivateKey from './public-key-by-private-key';\nimport recover from './recover';\nimport recoverPublicKey from './recover-public-key';\nimport sign from './sign';\nimport signTransaction from './sign-transaction';\nimport txDataByCompiled from './tx-data-by-compiled';\nimport calculateContractAddress from './calculate-contract-address';\nimport * as hash from './hash';\nimport * as hex from './hex';\nimport * as vrs from './vrs';\nimport * as util from './util';\nexport { createIdentity, publicKey, decryptWithPrivateKey, encryptWithPublicKey, cipher, publicKeyByPrivateKey, recover, recoverPublicKey, sign, signTransaction, txDataByCompiled, calculateContractAddress, hash, hex, vrs, util };\nexport default {\n  createIdentity: createIdentity,\n  publicKey: publicKey,\n  decryptWithPrivateKey: decryptWithPrivateKey,\n  encryptWithPublicKey: encryptWithPublicKey,\n  cipher: cipher,\n  publicKeyByPrivateKey: publicKeyByPrivateKey,\n  recover: recover,\n  recoverPublicKey: recoverPublicKey,\n  sign: sign,\n  signTransaction: signTransaction,\n  txDataByCompiled: txDataByCompiled,\n  calculateContractAddress: calculateContractAddress,\n  hash: hash,\n  hex: hex,\n  vrs: vrs,\n  util: util\n};"],"mappings":"AAAA,OAAOA,cAAc,MAAM,mBAAmB;AAC9C,OAAO,KAAKC,SAAS,MAAM,cAAc;AACzC,OAAOC,qBAAqB,MAAM,4BAA4B;AAC9D,OAAOC,oBAAoB,MAAM,2BAA2B;AAC5D,OAAO,KAAKC,MAAM,MAAM,UAAU;AAClC,OAAOC,qBAAqB,MAAM,6BAA6B;AAC/D,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,gBAAgB,MAAM,sBAAsB;AACnD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,eAAe,MAAM,oBAAoB;AAChD,OAAOC,gBAAgB,MAAM,uBAAuB;AACpD,OAAOC,wBAAwB,MAAM,8BAA8B;AACnE,OAAO,KAAKC,IAAI,MAAM,QAAQ;AAC9B,OAAO,KAAKC,GAAG,MAAM,OAAO;AAC5B,OAAO,KAAKC,GAAG,MAAM,OAAO;AAC5B,OAAO,KAAKC,IAAI,MAAM,QAAQ;AAC9B,SAASf,cAAc,EAAEC,SAAS,EAAEC,qBAAqB,EAAEC,oBAAoB,EAAEC,MAAM,EAAEC,qBAAqB,EAAEC,OAAO,EAAEC,gBAAgB,EAAEC,IAAI,EAAEC,eAAe,EAAEC,gBAAgB,EAAEC,wBAAwB,EAAEC,IAAI,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI;AAClO,eAAe;EACbf,cAAc,EAAEA,cAAc;EAC9BC,SAAS,EAAEA,SAAS;EACpBC,qBAAqB,EAAEA,qBAAqB;EAC5CC,oBAAoB,EAAEA,oBAAoB;EAC1CC,MAAM,EAAEA,MAAM;EACdC,qBAAqB,EAAEA,qBAAqB;EAC5CC,OAAO,EAAEA,OAAO;EAChBC,gBAAgB,EAAEA,gBAAgB;EAClCC,IAAI,EAAEA,IAAI;EACVC,eAAe,EAAEA,eAAe;EAChCC,gBAAgB,EAAEA,gBAAgB;EAClCC,wBAAwB,EAAEA,wBAAwB;EAClDC,IAAI,EAAEA,IAAI;EACVC,GAAG,EAAEA,GAAG;EACRC,GAAG,EAAEA,GAAG;EACRC,IAAI,EAAEA;AACR,CAAC"},"metadata":{},"sourceType":"module"}