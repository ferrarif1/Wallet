{"ast":null,"code":"var pbkdf2Sync = require('pbkdf2').pbkdf2Sync;\nvar MAX_VALUE = 0x7fffffff;\n\n// N = Cpu cost, r = Memory cost, p = parallelization cost\nfunction scrypt(key, salt, N, r, p, dkLen, progressCallback) {\n  if (N === 0 || (N & N - 1) !== 0) throw Error('N must be > 0 and a power of 2');\n  if (N > MAX_VALUE / 128 / r) throw Error('Parameter N is too large');\n  if (r > MAX_VALUE / 128 / p) throw Error('Parameter r is too large');\n  var XY = new Buffer(256 * r);\n  var V = new Buffer(128 * r * N);\n\n  // pseudo global\n  var B32 = new Int32Array(16); // salsa20_8\n  var x = new Int32Array(16); // salsa20_8\n  var _X = new Buffer(64); // blockmix_salsa8\n\n  // pseudo global\n  var B = pbkdf2Sync(key, salt, 1, p * 128 * r, 'sha256');\n  var tickCallback;\n  if (progressCallback) {\n    var totalOps = p * N * 2;\n    var currentOp = 0;\n    tickCallback = function () {\n      ++currentOp;\n\n      // send progress notifications once every 1,000 ops\n      if (currentOp % 1000 === 0) {\n        progressCallback({\n          current: currentOp,\n          total: totalOps,\n          percent: currentOp / totalOps * 100.0\n        });\n      }\n    };\n  }\n  for (var i = 0; i < p; i++) {\n    smix(B, i * 128 * r, r, N, V, XY);\n  }\n  return pbkdf2Sync(key, B, 1, dkLen, 'sha256');\n\n  // all of these functions are actually moved to the top\n  // due to function hoisting\n\n  function smix(B, Bi, r, N, V, XY) {\n    var Xi = 0;\n    var Yi = 128 * r;\n    var i;\n    B.copy(XY, Xi, Bi, Bi + Yi);\n    for (i = 0; i < N; i++) {\n      XY.copy(V, i * Yi, Xi, Xi + Yi);\n      blockmix_salsa8(XY, Xi, Yi, r);\n      if (tickCallback) tickCallback();\n    }\n    for (i = 0; i < N; i++) {\n      var offset = Xi + (2 * r - 1) * 64;\n      var j = XY.readUInt32LE(offset) & N - 1;\n      blockxor(V, j * Yi, XY, Xi, Yi);\n      blockmix_salsa8(XY, Xi, Yi, r);\n      if (tickCallback) tickCallback();\n    }\n    XY.copy(B, Bi, Xi, Xi + Yi);\n  }\n  function blockmix_salsa8(BY, Bi, Yi, r) {\n    var i;\n    arraycopy(BY, Bi + (2 * r - 1) * 64, _X, 0, 64);\n    for (i = 0; i < 2 * r; i++) {\n      blockxor(BY, i * 64, _X, 0, 64);\n      salsa20_8(_X);\n      arraycopy(_X, 0, BY, Yi + i * 64, 64);\n    }\n    for (i = 0; i < r; i++) {\n      arraycopy(BY, Yi + i * 2 * 64, BY, Bi + i * 64, 64);\n    }\n    for (i = 0; i < r; i++) {\n      arraycopy(BY, Yi + (i * 2 + 1) * 64, BY, Bi + (i + r) * 64, 64);\n    }\n  }\n  function R(a, b) {\n    return a << b | a >>> 32 - b;\n  }\n  function salsa20_8(B) {\n    var i;\n    for (i = 0; i < 16; i++) {\n      B32[i] = (B[i * 4 + 0] & 0xff) << 0;\n      B32[i] |= (B[i * 4 + 1] & 0xff) << 8;\n      B32[i] |= (B[i * 4 + 2] & 0xff) << 16;\n      B32[i] |= (B[i * 4 + 3] & 0xff) << 24;\n      // B32[i] = B.readUInt32LE(i*4)   <--- this is signficantly slower even in Node.js\n    }\n\n    arraycopy(B32, 0, x, 0, 16);\n    for (i = 8; i > 0; i -= 2) {\n      x[4] ^= R(x[0] + x[12], 7);\n      x[8] ^= R(x[4] + x[0], 9);\n      x[12] ^= R(x[8] + x[4], 13);\n      x[0] ^= R(x[12] + x[8], 18);\n      x[9] ^= R(x[5] + x[1], 7);\n      x[13] ^= R(x[9] + x[5], 9);\n      x[1] ^= R(x[13] + x[9], 13);\n      x[5] ^= R(x[1] + x[13], 18);\n      x[14] ^= R(x[10] + x[6], 7);\n      x[2] ^= R(x[14] + x[10], 9);\n      x[6] ^= R(x[2] + x[14], 13);\n      x[10] ^= R(x[6] + x[2], 18);\n      x[3] ^= R(x[15] + x[11], 7);\n      x[7] ^= R(x[3] + x[15], 9);\n      x[11] ^= R(x[7] + x[3], 13);\n      x[15] ^= R(x[11] + x[7], 18);\n      x[1] ^= R(x[0] + x[3], 7);\n      x[2] ^= R(x[1] + x[0], 9);\n      x[3] ^= R(x[2] + x[1], 13);\n      x[0] ^= R(x[3] + x[2], 18);\n      x[6] ^= R(x[5] + x[4], 7);\n      x[7] ^= R(x[6] + x[5], 9);\n      x[4] ^= R(x[7] + x[6], 13);\n      x[5] ^= R(x[4] + x[7], 18);\n      x[11] ^= R(x[10] + x[9], 7);\n      x[8] ^= R(x[11] + x[10], 9);\n      x[9] ^= R(x[8] + x[11], 13);\n      x[10] ^= R(x[9] + x[8], 18);\n      x[12] ^= R(x[15] + x[14], 7);\n      x[13] ^= R(x[12] + x[15], 9);\n      x[14] ^= R(x[13] + x[12], 13);\n      x[15] ^= R(x[14] + x[13], 18);\n    }\n    for (i = 0; i < 16; ++i) B32[i] = x[i] + B32[i];\n    for (i = 0; i < 16; i++) {\n      var bi = i * 4;\n      B[bi + 0] = B32[i] >> 0 & 0xff;\n      B[bi + 1] = B32[i] >> 8 & 0xff;\n      B[bi + 2] = B32[i] >> 16 & 0xff;\n      B[bi + 3] = B32[i] >> 24 & 0xff;\n      // B.writeInt32LE(B32[i], i*4)  //<--- this is signficantly slower even in Node.js\n    }\n  }\n\n  // naive approach... going back to loop unrolling may yield additional performance\n  function blockxor(S, Si, D, Di, len) {\n    for (var i = 0; i < len; i++) {\n      D[Di + i] ^= S[Si + i];\n    }\n  }\n}\nfunction arraycopy(src, srcPos, dest, destPos, length) {\n  if (Buffer.isBuffer(src) && Buffer.isBuffer(dest)) {\n    src.copy(dest, destPos, srcPos, srcPos + length);\n  } else {\n    while (length--) {\n      dest[destPos++] = src[srcPos++];\n    }\n  }\n}\nmodule.exports = scrypt;","map":{"version":3,"names":["pbkdf2Sync","require","MAX_VALUE","scrypt","key","salt","N","r","p","dkLen","progressCallback","Error","XY","Buffer","V","B32","Int32Array","x","_X","B","tickCallback","totalOps","currentOp","current","total","percent","i","smix","Bi","Xi","Yi","copy","blockmix_salsa8","offset","j","readUInt32LE","blockxor","BY","arraycopy","salsa20_8","R","a","b","bi","S","Si","D","Di","len","src","srcPos","dest","destPos","length","isBuffer","module","exports"],"sources":["/Users/zhangyuanyi/Downloads/Wallet/walletdemo/node_modules/scryptsy/lib/scrypt.js"],"sourcesContent":["var pbkdf2Sync = require('pbkdf2').pbkdf2Sync\n\nvar MAX_VALUE = 0x7fffffff\n\n// N = Cpu cost, r = Memory cost, p = parallelization cost\nfunction scrypt (key, salt, N, r, p, dkLen, progressCallback) {\n  if (N === 0 || (N & (N - 1)) !== 0) throw Error('N must be > 0 and a power of 2')\n\n  if (N > MAX_VALUE / 128 / r) throw Error('Parameter N is too large')\n  if (r > MAX_VALUE / 128 / p) throw Error('Parameter r is too large')\n\n  var XY = new Buffer(256 * r)\n  var V = new Buffer(128 * r * N)\n\n  // pseudo global\n  var B32 = new Int32Array(16) // salsa20_8\n  var x = new Int32Array(16) // salsa20_8\n  var _X = new Buffer(64) // blockmix_salsa8\n\n  // pseudo global\n  var B = pbkdf2Sync(key, salt, 1, p * 128 * r, 'sha256')\n\n  var tickCallback\n  if (progressCallback) {\n    var totalOps = p * N * 2\n    var currentOp = 0\n\n    tickCallback = function () {\n      ++currentOp\n\n      // send progress notifications once every 1,000 ops\n      if (currentOp % 1000 === 0) {\n        progressCallback({\n          current: currentOp,\n          total: totalOps,\n          percent: (currentOp / totalOps) * 100.0\n        })\n      }\n    }\n  }\n\n  for (var i = 0; i < p; i++) {\n    smix(B, i * 128 * r, r, N, V, XY)\n  }\n\n  return pbkdf2Sync(key, B, 1, dkLen, 'sha256')\n\n  // all of these functions are actually moved to the top\n  // due to function hoisting\n\n  function smix (B, Bi, r, N, V, XY) {\n    var Xi = 0\n    var Yi = 128 * r\n    var i\n\n    B.copy(XY, Xi, Bi, Bi + Yi)\n\n    for (i = 0; i < N; i++) {\n      XY.copy(V, i * Yi, Xi, Xi + Yi)\n      blockmix_salsa8(XY, Xi, Yi, r)\n\n      if (tickCallback) tickCallback()\n    }\n\n    for (i = 0; i < N; i++) {\n      var offset = Xi + (2 * r - 1) * 64\n      var j = XY.readUInt32LE(offset) & (N - 1)\n      blockxor(V, j * Yi, XY, Xi, Yi)\n      blockmix_salsa8(XY, Xi, Yi, r)\n\n      if (tickCallback) tickCallback()\n    }\n\n    XY.copy(B, Bi, Xi, Xi + Yi)\n  }\n\n  function blockmix_salsa8 (BY, Bi, Yi, r) {\n    var i\n\n    arraycopy(BY, Bi + (2 * r - 1) * 64, _X, 0, 64)\n\n    for (i = 0; i < 2 * r; i++) {\n      blockxor(BY, i * 64, _X, 0, 64)\n      salsa20_8(_X)\n      arraycopy(_X, 0, BY, Yi + (i * 64), 64)\n    }\n\n    for (i = 0; i < r; i++) {\n      arraycopy(BY, Yi + (i * 2) * 64, BY, Bi + (i * 64), 64)\n    }\n\n    for (i = 0; i < r; i++) {\n      arraycopy(BY, Yi + (i * 2 + 1) * 64, BY, Bi + (i + r) * 64, 64)\n    }\n  }\n\n  function R (a, b) {\n    return (a << b) | (a >>> (32 - b))\n  }\n\n  function salsa20_8 (B) {\n    var i\n\n    for (i = 0; i < 16; i++) {\n      B32[i] = (B[i * 4 + 0] & 0xff) << 0\n      B32[i] |= (B[i * 4 + 1] & 0xff) << 8\n      B32[i] |= (B[i * 4 + 2] & 0xff) << 16\n      B32[i] |= (B[i * 4 + 3] & 0xff) << 24\n      // B32[i] = B.readUInt32LE(i*4)   <--- this is signficantly slower even in Node.js\n    }\n\n    arraycopy(B32, 0, x, 0, 16)\n\n    for (i = 8; i > 0; i -= 2) {\n      x[ 4] ^= R(x[ 0] + x[12], 7)\n      x[ 8] ^= R(x[ 4] + x[ 0], 9)\n      x[12] ^= R(x[ 8] + x[ 4], 13)\n      x[ 0] ^= R(x[12] + x[ 8], 18)\n      x[ 9] ^= R(x[ 5] + x[ 1], 7)\n      x[13] ^= R(x[ 9] + x[ 5], 9)\n      x[ 1] ^= R(x[13] + x[ 9], 13)\n      x[ 5] ^= R(x[ 1] + x[13], 18)\n      x[14] ^= R(x[10] + x[ 6], 7)\n      x[ 2] ^= R(x[14] + x[10], 9)\n      x[ 6] ^= R(x[ 2] + x[14], 13)\n      x[10] ^= R(x[ 6] + x[ 2], 18)\n      x[ 3] ^= R(x[15] + x[11], 7)\n      x[ 7] ^= R(x[ 3] + x[15], 9)\n      x[11] ^= R(x[ 7] + x[ 3], 13)\n      x[15] ^= R(x[11] + x[ 7], 18)\n      x[ 1] ^= R(x[ 0] + x[ 3], 7)\n      x[ 2] ^= R(x[ 1] + x[ 0], 9)\n      x[ 3] ^= R(x[ 2] + x[ 1], 13)\n      x[ 0] ^= R(x[ 3] + x[ 2], 18)\n      x[ 6] ^= R(x[ 5] + x[ 4], 7)\n      x[ 7] ^= R(x[ 6] + x[ 5], 9)\n      x[ 4] ^= R(x[ 7] + x[ 6], 13)\n      x[ 5] ^= R(x[ 4] + x[ 7], 18)\n      x[11] ^= R(x[10] + x[ 9], 7)\n      x[ 8] ^= R(x[11] + x[10], 9)\n      x[ 9] ^= R(x[ 8] + x[11], 13)\n      x[10] ^= R(x[ 9] + x[ 8], 18)\n      x[12] ^= R(x[15] + x[14], 7)\n      x[13] ^= R(x[12] + x[15], 9)\n      x[14] ^= R(x[13] + x[12], 13)\n      x[15] ^= R(x[14] + x[13], 18)\n    }\n\n    for (i = 0; i < 16; ++i) B32[i] = x[i] + B32[i]\n\n    for (i = 0; i < 16; i++) {\n      var bi = i * 4\n      B[bi + 0] = (B32[i] >> 0 & 0xff)\n      B[bi + 1] = (B32[i] >> 8 & 0xff)\n      B[bi + 2] = (B32[i] >> 16 & 0xff)\n      B[bi + 3] = (B32[i] >> 24 & 0xff)\n      // B.writeInt32LE(B32[i], i*4)  //<--- this is signficantly slower even in Node.js\n    }\n  }\n\n  // naive approach... going back to loop unrolling may yield additional performance\n  function blockxor (S, Si, D, Di, len) {\n    for (var i = 0; i < len; i++) {\n      D[Di + i] ^= S[Si + i]\n    }\n  }\n}\n\nfunction arraycopy (src, srcPos, dest, destPos, length) {\n  if (Buffer.isBuffer(src) && Buffer.isBuffer(dest)) {\n    src.copy(dest, destPos, srcPos, srcPos + length)\n  } else {\n    while (length--) {\n      dest[destPos++] = src[srcPos++]\n    }\n  }\n}\n\nmodule.exports = scrypt\n"],"mappings":"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,CAACvB,CAAC,CAAE,CAAC,CAAC,GAAGA,CAAC,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAC5BA,CAAC,CAAE,CAAC,CAAC,IAAIuB,CAAC,CAACvB,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAE,CAAC,CAAC,EAAE,EAAE,CAAC;MAC7BA,CAAC,CAAE,CAAC,CAAC,IAAIuB,CAAC,CAACvB,CAAC,CAAE,CAAC,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;MAC7BA,CAAC,CAAC,EAAE,CAAC,IAAIuB,CAAC,CAACvB,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAC5BA,CAAC,CAAE,CAAC,CAAC,IAAIuB,CAAC,CAACvB,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAC5BA,CAAC,CAAE,CAAC,CAAC,IAAIuB,CAAC,CAACvB,CAAC,CAAE,CAAC,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;MAC7BA,CAAC,CAAC,EAAE,CAAC,IAAIuB,CAAC,CAACvB,CAAC,CAAE,CAAC,CAAC,GAAGA,CAAC,CAAE,CAAC,CAAC,EAAE,EAAE,CAAC;MAC7BA,CAAC,CAAE,CAAC,CAAC,IAAIuB,CAAC,CAACvB,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAC5BA,CAAC,CAAE,CAAC,CAAC,IAAIuB,CAAC,CAACvB,CAAC,CAAE,CAAC,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAC5BA,CAAC,CAAC,EAAE,CAAC,IAAIuB,CAAC,CAACvB,CAAC,CAAE,CAAC,CAAC,GAAGA,CAAC,CAAE,CAAC,CAAC,EAAE,EAAE,CAAC;MAC7BA,CAAC,CAAC,EAAE,CAAC,IAAIuB,CAAC,CAACvB,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAE,CAAC,CAAC,EAAE,EAAE,CAAC;MAC7BA,CAAC,CAAE,CAAC,CAAC,IAAIuB,CAAC,CAACvB,CAAC,CAAE,CAAC,CAAC,GAAGA,CAAC,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAC5BA,CAAC,CAAE,CAAC,CAAC,IAAIuB,CAAC,CAACvB,CAAC,CAAE,CAAC,CAAC,GAAGA,CAAC,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAC5BA,CAAC,CAAE,CAAC,CAAC,IAAIuB,CAAC,CAACvB,CAAC,CAAE,CAAC,CAAC,GAAGA,CAAC,CAAE,CAAC,CAAC,EAAE,EAAE,CAAC;MAC7BA,CAAC,CAAE,CAAC,CAAC,IAAIuB,CAAC,CAACvB,CAAC,CAAE,CAAC,CAAC,GAAGA,CAAC,CAAE,CAAC,CAAC,EAAE,EAAE,CAAC;MAC7BA,CAAC,CAAE,CAAC,CAAC,IAAIuB,CAAC,CAACvB,CAAC,CAAE,CAAC,CAAC,GAAGA,CAAC,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAC5BA,CAAC,CAAE,CAAC,CAAC,IAAIuB,CAAC,CAACvB,CAAC,CAAE,CAAC,CAAC,GAAGA,CAAC,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAC5BA,CAAC,CAAE,CAAC,CAAC,IAAIuB,CAAC,CAACvB,CAAC,CAAE,CAAC,CAAC,GAAGA,CAAC,CAAE,CAAC,CAAC,EAAE,EAAE,CAAC;MAC7BA,CAAC,CAAE,CAAC,CAAC,IAAIuB,CAAC,CAACvB,CAAC,CAAE,CAAC,CAAC,GAAGA,CAAC,CAAE,CAAC,CAAC,EAAE,EAAE,CAAC;MAC7BA,CAAC,CAAC,EAAE,CAAC,IAAIuB,CAAC,CAACvB,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAC5BA,CAAC,CAAE,CAAC,CAAC,IAAIuB,CAAC,CAACvB,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAC5BA,CAAC,CAAE,CAAC,CAAC,IAAIuB,CAAC,CAACvB,CAAC,CAAE,CAAC,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;MAC7BA,CAAC,CAAC,EAAE,CAAC,IAAIuB,CAAC,CAACvB,CAAC,CAAE,CAAC,CAAC,GAAGA,CAAC,CAAE,CAAC,CAAC,EAAE,EAAE,CAAC;MAC7BA,CAAC,CAAC,EAAE,CAAC,IAAIuB,CAAC,CAACvB,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAC5BA,CAAC,CAAC,EAAE,CAAC,IAAIuB,CAAC,CAACvB,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAC5BA,CAAC,CAAC,EAAE,CAAC,IAAIuB,CAAC,CAACvB,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;MAC7BA,CAAC,CAAC,EAAE,CAAC,IAAIuB,CAAC,CAACvB,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;IAC/B;IAEA,KAAKS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAE,EAAEA,CAAC,EAAEX,GAAG,CAACW,CAAC,CAAC,GAAGT,CAAC,CAACS,CAAC,CAAC,GAAGX,GAAG,CAACW,CAAC,CAAC;IAE/C,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MACvB,IAAIiB,EAAE,GAAGjB,CAAC,GAAG,CAAC;MACdP,CAAC,CAACwB,EAAE,GAAG,CAAC,CAAC,GAAI5B,GAAG,CAACW,CAAC,CAAC,IAAI,CAAC,GAAG,IAAK;MAChCP,CAAC,CAACwB,EAAE,GAAG,CAAC,CAAC,GAAI5B,GAAG,CAACW,CAAC,CAAC,IAAI,CAAC,GAAG,IAAK;MAChCP,CAAC,CAACwB,EAAE,GAAG,CAAC,CAAC,GAAI5B,GAAG,CAACW,CAAC,CAAC,IAAI,EAAE,GAAG,IAAK;MACjCP,CAAC,CAACwB,EAAE,GAAG,CAAC,CAAC,GAAI5B,GAAG,CAACW,CAAC,CAAC,IAAI,EAAE,GAAG,IAAK;MACjC;IACF;EACF;;EAEA;EACA,SAASU,QAAQ,CAAEQ,CAAC,EAAEC,EAAE,EAAEC,CAAC,EAAEC,EAAE,EAAEC,GAAG,EAAE;IACpC,KAAK,IAAItB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsB,GAAG,EAAEtB,CAAC,EAAE,EAAE;MAC5BoB,CAAC,CAACC,EAAE,GAAGrB,CAAC,CAAC,IAAIkB,CAAC,CAACC,EAAE,GAAGnB,CAAC,CAAC;IACxB;EACF;AACF;AAEA,SAASY,SAAS,CAAEW,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,OAAO,EAAEC,MAAM,EAAE;EACtD,IAAIxC,MAAM,CAACyC,QAAQ,CAACL,GAAG,CAAC,IAAIpC,MAAM,CAACyC,QAAQ,CAACH,IAAI,CAAC,EAAE;IACjDF,GAAG,CAAClB,IAAI,CAACoB,IAAI,EAAEC,OAAO,EAAEF,MAAM,EAAEA,MAAM,GAAGG,MAAM,CAAC;EAClD,CAAC,MAAM;IACL,OAAOA,MAAM,EAAE,EAAE;MACfF,IAAI,CAACC,OAAO,EAAE,CAAC,GAAGH,GAAG,CAACC,MAAM,EAAE,CAAC;IACjC;EACF;AACF;AAEAK,MAAM,CAACC,OAAO,GAAGrD,MAAM"},"metadata":{},"sourceType":"script"}