{"ast":null,"code":"import { ecdsaSign as secp256k1_sign } from 'secp256k1';\nimport { addLeading0x, removeLeading0x } from './util';\n/**\n * signs the given message\n * we do not use sign from eth-lib because the pure secp256k1-version is 90% faster\n * @param  {string} privateKey\n * @param  {string} hash\n * @return {string} hexString\n */\n\nexport default function sign(privateKey, hash) {\n  hash = addLeading0x(hash);\n  if (hash.length !== 66) throw new Error('EthCrypto.sign(): Can only sign hashes, given: ' + hash);\n  var sigObj = secp256k1_sign(new Uint8Array(Buffer.from(removeLeading0x(hash), 'hex')), new Uint8Array(Buffer.from(removeLeading0x(privateKey), 'hex')));\n  var recoveryId = sigObj.recid === 1 ? '1c' : '1b';\n  var newSignature = '0x' + Buffer.from(sigObj.signature).toString('hex') + recoveryId;\n  return newSignature;\n}","map":{"version":3,"names":["ecdsaSign","secp256k1_sign","addLeading0x","removeLeading0x","sign","privateKey","hash","length","Error","sigObj","Uint8Array","Buffer","from","recoveryId","recid","newSignature","signature","toString"],"sources":["/Users/zhangyuanyi/Downloads/Wallet/walletdemo/node_modules/eth-crypto/dist/es/sign.js"],"sourcesContent":["import { ecdsaSign as secp256k1_sign } from 'secp256k1';\nimport { addLeading0x, removeLeading0x } from './util';\n/**\n * signs the given message\n * we do not use sign from eth-lib because the pure secp256k1-version is 90% faster\n * @param  {string} privateKey\n * @param  {string} hash\n * @return {string} hexString\n */\n\nexport default function sign(privateKey, hash) {\n  hash = addLeading0x(hash);\n  if (hash.length !== 66) throw new Error('EthCrypto.sign(): Can only sign hashes, given: ' + hash);\n  var sigObj = secp256k1_sign(new Uint8Array(Buffer.from(removeLeading0x(hash), 'hex')), new Uint8Array(Buffer.from(removeLeading0x(privateKey), 'hex')));\n  var recoveryId = sigObj.recid === 1 ? '1c' : '1b';\n  var newSignature = '0x' + Buffer.from(sigObj.signature).toString('hex') + recoveryId;\n  return newSignature;\n}"],"mappings":"AAAA,SAASA,SAAS,IAAIC,cAAc,QAAQ,WAAW;AACvD,SAASC,YAAY,EAAEC,eAAe,QAAQ,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,IAAI,CAACC,UAAU,EAAEC,IAAI,EAAE;EAC7CA,IAAI,GAAGJ,YAAY,CAACI,IAAI,CAAC;EACzB,IAAIA,IAAI,CAACC,MAAM,KAAK,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,iDAAiD,GAAGF,IAAI,CAAC;EACjG,IAAIG,MAAM,GAAGR,cAAc,CAAC,IAAIS,UAAU,CAACC,MAAM,CAACC,IAAI,CAACT,eAAe,CAACG,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,IAAII,UAAU,CAACC,MAAM,CAACC,IAAI,CAACT,eAAe,CAACE,UAAU,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;EACvJ,IAAIQ,UAAU,GAAGJ,MAAM,CAACK,KAAK,KAAK,CAAC,GAAG,IAAI,GAAG,IAAI;EACjD,IAAIC,YAAY,GAAG,IAAI,GAAGJ,MAAM,CAACC,IAAI,CAACH,MAAM,CAACO,SAAS,CAAC,CAACC,QAAQ,CAAC,KAAK,CAAC,GAAGJ,UAAU;EACpF,OAAOE,YAAY;AACrB"},"metadata":{},"sourceType":"module"}