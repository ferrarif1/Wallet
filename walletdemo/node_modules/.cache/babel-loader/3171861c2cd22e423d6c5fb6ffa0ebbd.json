{"ast":null,"code":"import { utils as ethersUtils } from 'ethers';\nexport function keccak256(params) {\n  var types = [];\n  var values = [];\n  if (!Array.isArray(params)) {\n    types.push('string');\n    values.push(params);\n  } else {\n    params.forEach(function (p) {\n      types.push(p.type);\n      values.push(p.value);\n    });\n  }\n  return ethersUtils.solidityKeccak256(types, values);\n}\nexport var SIGN_PREFIX = '\\x19Ethereum Signed Message:\\n32';","map":{"version":3,"names":["utils","ethersUtils","keccak256","params","types","values","Array","isArray","push","forEach","p","type","value","solidityKeccak256","SIGN_PREFIX"],"sources":["/Users/zhangyuanyi/Downloads/Wallet/walletdemo/node_modules/eth-crypto/dist/es/hash.js"],"sourcesContent":["import { utils as ethersUtils } from 'ethers';\nexport function keccak256(params) {\n  var types = [];\n  var values = [];\n\n  if (!Array.isArray(params)) {\n    types.push('string');\n    values.push(params);\n  } else {\n    params.forEach(function (p) {\n      types.push(p.type);\n      values.push(p.value);\n    });\n  }\n\n  return ethersUtils.solidityKeccak256(types, values);\n}\nexport var SIGN_PREFIX = '\\x19Ethereum Signed Message:\\n32';"],"mappings":"AAAA,SAASA,KAAK,IAAIC,WAAW,QAAQ,QAAQ;AAC7C,OAAO,SAASC,SAAS,CAACC,MAAM,EAAE;EAChC,IAAIC,KAAK,GAAG,EAAE;EACd,IAAIC,MAAM,GAAG,EAAE;EAEf,IAAI,CAACC,KAAK,CAACC,OAAO,CAACJ,MAAM,CAAC,EAAE;IAC1BC,KAAK,CAACI,IAAI,CAAC,QAAQ,CAAC;IACpBH,MAAM,CAACG,IAAI,CAACL,MAAM,CAAC;EACrB,CAAC,MAAM;IACLA,MAAM,CAACM,OAAO,CAAC,UAAUC,CAAC,EAAE;MAC1BN,KAAK,CAACI,IAAI,CAACE,CAAC,CAACC,IAAI,CAAC;MAClBN,MAAM,CAACG,IAAI,CAACE,CAAC,CAACE,KAAK,CAAC;IACtB,CAAC,CAAC;EACJ;EAEA,OAAOX,WAAW,CAACY,iBAAiB,CAACT,KAAK,EAAEC,MAAM,CAAC;AACrD;AACA,OAAO,IAAIS,WAAW,GAAG,kCAAkC"},"metadata":{},"sourceType":"module"}