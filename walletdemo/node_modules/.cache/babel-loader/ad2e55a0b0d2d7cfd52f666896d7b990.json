{"ast":null,"code":"import { ecdsaRecover } from 'secp256k1';\nimport { removeLeading0x, hexToUnit8Array, uint8ArrayToHex } from './util';\n/**\n * returns the publicKey for the privateKey with which the messageHash was signed\n * @param  {string} signature\n * @param  {string} hash\n * @return {string} publicKey\n */\n\nexport default function recoverPublicKey(signature, hash) {\n  signature = removeLeading0x(signature); // split into v-value and sig\n\n  var sigOnly = signature.substring(0, signature.length - 2); // all but last 2 chars\n\n  var vValue = signature.slice(-2); // last 2 chars\n\n  var recoveryNumber = vValue === '1c' ? 1 : 0;\n  var pubKey = uint8ArrayToHex(ecdsaRecover(hexToUnit8Array(sigOnly), recoveryNumber, hexToUnit8Array(removeLeading0x(hash)), false)); // remove trailing '04'\n\n  pubKey = pubKey.slice(2);\n  return pubKey;\n}","map":{"version":3,"names":["ecdsaRecover","removeLeading0x","hexToUnit8Array","uint8ArrayToHex","recoverPublicKey","signature","hash","sigOnly","substring","length","vValue","slice","recoveryNumber","pubKey"],"sources":["/Users/zhangyuanyi/Downloads/Wallet/walletdemo/node_modules/eth-crypto/dist/es/recover-public-key.js"],"sourcesContent":["import { ecdsaRecover } from 'secp256k1';\nimport { removeLeading0x, hexToUnit8Array, uint8ArrayToHex } from './util';\n/**\n * returns the publicKey for the privateKey with which the messageHash was signed\n * @param  {string} signature\n * @param  {string} hash\n * @return {string} publicKey\n */\n\nexport default function recoverPublicKey(signature, hash) {\n  signature = removeLeading0x(signature); // split into v-value and sig\n\n  var sigOnly = signature.substring(0, signature.length - 2); // all but last 2 chars\n\n  var vValue = signature.slice(-2); // last 2 chars\n\n  var recoveryNumber = vValue === '1c' ? 1 : 0;\n  var pubKey = uint8ArrayToHex(ecdsaRecover(hexToUnit8Array(sigOnly), recoveryNumber, hexToUnit8Array(removeLeading0x(hash)), false)); // remove trailing '04'\n\n  pubKey = pubKey.slice(2);\n  return pubKey;\n}"],"mappings":"AAAA,SAASA,YAAY,QAAQ,WAAW;AACxC,SAASC,eAAe,EAAEC,eAAe,EAAEC,eAAe,QAAQ,QAAQ;AAC1E;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,gBAAgB,CAACC,SAAS,EAAEC,IAAI,EAAE;EACxDD,SAAS,GAAGJ,eAAe,CAACI,SAAS,CAAC,CAAC,CAAC;;EAExC,IAAIE,OAAO,GAAGF,SAAS,CAACG,SAAS,CAAC,CAAC,EAAEH,SAAS,CAACI,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;;EAE5D,IAAIC,MAAM,GAAGL,SAAS,CAACM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAElC,IAAIC,cAAc,GAAGF,MAAM,KAAK,IAAI,GAAG,CAAC,GAAG,CAAC;EAC5C,IAAIG,MAAM,GAAGV,eAAe,CAACH,YAAY,CAACE,eAAe,CAACK,OAAO,CAAC,EAAEK,cAAc,EAAEV,eAAe,CAACD,eAAe,CAACK,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;;EAErIO,MAAM,GAAGA,MAAM,CAACF,KAAK,CAAC,CAAC,CAAC;EACxB,OAAOE,MAAM;AACf"},"metadata":{},"sourceType":"module"}