{"ast":null,"code":"import { utils as ethersUtils } from 'ethers';\n/**\n * split signature-hex into parts\n * @param  {string} hexString\n * @return {{v: string, r: string, s: string}}\n */\n\nexport function fromString(hexString) {\n  var arr = ethersUtils.splitSignature(hexString);\n  return {\n    // convert \"v\" to hex\n    v: \"0x\".concat(arr.v.toString(16)),\n    r: arr.r,\n    s: arr.s\n  };\n}\n/**\n * merge signature-parts to one string\n * @param  {{v: string, r: string, s: string}} sig\n * @return {string} hexString\n */\n\nexport function toString(sig) {\n  return ethersUtils.joinSignature(sig);\n}","map":{"version":3,"names":["utils","ethersUtils","fromString","hexString","arr","splitSignature","v","concat","toString","r","s","sig","joinSignature"],"sources":["/Users/zhangyuanyi/Downloads/Wallet/walletdemo/node_modules/eth-crypto/dist/es/vrs.js"],"sourcesContent":["import { utils as ethersUtils } from 'ethers';\n/**\n * split signature-hex into parts\n * @param  {string} hexString\n * @return {{v: string, r: string, s: string}}\n */\n\nexport function fromString(hexString) {\n  var arr = ethersUtils.splitSignature(hexString);\n  return {\n    // convert \"v\" to hex\n    v: \"0x\".concat(arr.v.toString(16)),\n    r: arr.r,\n    s: arr.s\n  };\n}\n/**\n * merge signature-parts to one string\n * @param  {{v: string, r: string, s: string}} sig\n * @return {string} hexString\n */\n\nexport function toString(sig) {\n  return ethersUtils.joinSignature(sig);\n}"],"mappings":"AAAA,SAASA,KAAK,IAAIC,WAAW,QAAQ,QAAQ;AAC7C;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,UAAU,CAACC,SAAS,EAAE;EACpC,IAAIC,GAAG,GAAGH,WAAW,CAACI,cAAc,CAACF,SAAS,CAAC;EAC/C,OAAO;IACL;IACAG,CAAC,EAAE,IAAI,CAACC,MAAM,CAACH,GAAG,CAACE,CAAC,CAACE,QAAQ,CAAC,EAAE,CAAC,CAAC;IAClCC,CAAC,EAAEL,GAAG,CAACK,CAAC;IACRC,CAAC,EAAEN,GAAG,CAACM;EACT,CAAC;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASF,QAAQ,CAACG,GAAG,EAAE;EAC5B,OAAOV,WAAW,CAACW,aAAa,CAACD,GAAG,CAAC;AACvC"},"metadata":{},"sourceType":"module"}